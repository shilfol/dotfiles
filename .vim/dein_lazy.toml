# golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = '''
  let g:go_highlight_functions = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_types = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
  let g:go_highlight_interfaces = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_build_constraints = 1

  let g:go_fmt_command = "goimports"
  let g:go_metalinter_autosave = 1
'''

# deoplete
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_event = 'VimEnter'

[[plugins]]
repo = 'roxma/nvim-yarp'
on_event = 'VimEnter'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
on_event = 'InsertEnter'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
    \ neosnippet#expandable_or_jumpable() ?
    \   "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
hook_post_source = '''
  call deoplete#custom#option({
  \ 'auto_complete_delay': 0,
  \ 'camel_case': v:true,
  \ 'max_list': 20,
  \ 'num_processes': 4,
  \ })
'''

# denite.nvim
[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = 'VimEnter'
hook_add = '''
  nnoremap <C-p> :<C-u>Denite buffer file_mru -mode=insert<CR>
  nnoremap <C-n> :<C-u>Denite file/rec -mode=insert<CR>

  nnoremap <silent> <Space>g :<C-u>Denite -mode=normal grep -smartcase -auto-action=preview -vertical-preview<CR> 
  nnoremap <silent> <Space>cg :<C-u>DeniteCursorWord -mode=normal grep -auto-action=preview -vertical-preview<CR> 
'''
hook_post_source = '''
  call denite#custom#option('default', {
  \ 'prompt': '>',
  \ 'cursor_wrap': v:true,
  \ 'direction': 'top',
  \ })
'''

# tex
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_source = '''
  let g:vimtex_compiler_latexmk = {
    \ 'background': 1,
    \ 'build_dir': '', 
    \ 'continuous': 1,
    \ 'options': [
    \   '-pdfdvi',
    \   '-verbose',
    \   '-file-line-error',
    \   '-synctex=1',
    \   '-interaction=nonstopmode',
    \],
  \}
  let g:vimtex_view_method = "zathura"
  let g:vimtex_view_general_viewer = 'zathura'
  let g:vimtex_view_general_options = '-r @line @pdf @tex'
'''
#smarty template
[[plugins]]
repo = 'vim-scripts/smarty-syntax'
on_ft = ['smarty']

#html
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html','smarty']
hook_source ='''
  let g:user_emmet_mode = 'a'
  let g:user_emmet_settings = {
    \'variables' : {
    \  'lang' : 'ja'
    \},
  \}
'''

[[plugins]]
repo = 'vim-scripts/closetag.vim'
on_ft = ['html','smarty']

#markdown preview
#type :MarkdownPreview
[[plugins]]
repo = 'iamcco/markdown-preview.vim'
on_ft = ['markdown']

#autolinter
[[plugins]]
repo = 'w0rp/ale'
on_ft = ['ruby','javascript']
hook_source ='''
  let g:ale_linters = {
  \  'javascript': ['eslint','prettier'],
  \  'ruby': ['rubocop'],
  \}
  let g:ale_fixers = {
  \  'javascript' : ['prettier'],
  \}
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 0
  let g:ale_lint_on_enter = 0
  let g:ale_fix_on_save = 1
'''
